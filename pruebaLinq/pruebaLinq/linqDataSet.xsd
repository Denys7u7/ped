<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="linqDataSet" targetNamespace="http://tempuri.org/linqDataSet.xsd" xmlns:mstns="http://tempuri.org/linqDataSet.xsd" xmlns="http://tempuri.org/linqDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="linqConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="linqConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.pruebaLinq.Properties.Settings.GlobalReference.Default.linqConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="pruebaTableAdapter" GeneratorDataComponentClassName="pruebaTableAdapter" Name="prueba" UserDataComponentName="pruebaTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="linqConnectionString (Settings)" DbObjectName="linq.dbo.prueba" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[prueba] WHERE (([id] = @Original_id) AND ((@IsNull_prueba = 1 AND [prueba] IS NULL) OR ([prueba] = @Original_prueba)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_prueba" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="prueba" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_prueba" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="prueba" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[prueba] ([prueba]) VALUES (@prueba);
SELECT id, prueba FROM prueba WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@prueba" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="prueba" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, prueba FROM dbo.prueba</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[prueba] SET [prueba] = @prueba WHERE (([id] = @Original_id) AND ((@IsNull_prueba = 1 AND [prueba] IS NULL) OR ([prueba] = @Original_prueba)));
SELECT id, prueba FROM prueba WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@prueba" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="prueba" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_prueba" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="prueba" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_prueba" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="prueba" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="linq.dbo.prueba" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="prueba" DataSetColumn="prueba" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="prueba2TableAdapter" GeneratorDataComponentClassName="prueba2TableAdapter" Name="prueba2" UserDataComponentName="prueba2TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="linqConnectionString (Settings)" DbObjectName="linq.dbo.prueba2" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[prueba2] WHERE (([id] = @Original_id) AND ((@IsNull_prueba2 = 1 AND [prueba2] IS NULL) OR ([prueba2] = @Original_prueba2)) AND ((@IsNull_prueba1 = 1 AND [prueba1] IS NULL) OR ([prueba1] = @Original_prueba1)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_prueba2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="prueba2" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_prueba2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="prueba2" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_prueba1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="prueba1" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_prueba1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="prueba1" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[prueba2] ([prueba2], [prueba1]) VALUES (@prueba2, @prueba1);
SELECT id, prueba2, prueba1 FROM prueba2 WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@prueba2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="prueba2" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@prueba1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="prueba1" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, prueba2, prueba1 FROM dbo.prueba2</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[prueba2] SET [prueba2] = @prueba2, [prueba1] = @prueba1 WHERE (([id] = @Original_id) AND ((@IsNull_prueba2 = 1 AND [prueba2] IS NULL) OR ([prueba2] = @Original_prueba2)) AND ((@IsNull_prueba1 = 1 AND [prueba1] IS NULL) OR ([prueba1] = @Original_prueba1)));
SELECT id, prueba2, prueba1 FROM prueba2 WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@prueba2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="prueba2" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@prueba1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="prueba1" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_prueba2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="prueba2" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_prueba2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="prueba2" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_prueba1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="prueba1" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_prueba1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="prueba1" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="linq.dbo.prueba2" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="prueba2" DataSetColumn="prueba2" />
              <Mapping SourceColumn="prueba1" DataSetColumn="prueba1" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="linqDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="linqDataSet" msprop:Generator_UserDSName="linqDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="prueba" msprop:Generator_TableClassName="pruebaDataTable" msprop:Generator_TableVarName="tableprueba" msprop:Generator_TablePropName="prueba" msprop:Generator_RowDeletingName="pruebaRowDeleting" msprop:Generator_RowChangingName="pruebaRowChanging" msprop:Generator_RowEvHandlerName="pruebaRowChangeEventHandler" msprop:Generator_RowDeletedName="pruebaRowDeleted" msprop:Generator_UserTableName="prueba" msprop:Generator_RowChangedName="pruebaRowChanged" msprop:Generator_RowEvArgName="pruebaRowChangeEvent" msprop:Generator_RowClassName="pruebaRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="prueba" msprop:Generator_ColumnVarNameInTable="columnprueba" msprop:Generator_ColumnPropNameInRow="prueba" msprop:Generator_ColumnPropNameInTable="pruebaColumn" msprop:Generator_UserColumnName="prueba" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="prueba2" msprop:Generator_TableClassName="prueba2DataTable" msprop:Generator_TableVarName="tableprueba2" msprop:Generator_TablePropName="prueba2" msprop:Generator_RowDeletingName="prueba2RowDeleting" msprop:Generator_RowChangingName="prueba2RowChanging" msprop:Generator_RowEvHandlerName="prueba2RowChangeEventHandler" msprop:Generator_RowDeletedName="prueba2RowDeleted" msprop:Generator_UserTableName="prueba2" msprop:Generator_RowChangedName="prueba2RowChanged" msprop:Generator_RowEvArgName="prueba2RowChangeEvent" msprop:Generator_RowClassName="prueba2Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="prueba2" msprop:Generator_ColumnVarNameInTable="columnprueba2" msprop:Generator_ColumnPropNameInRow="prueba2" msprop:Generator_ColumnPropNameInTable="prueba2Column" msprop:Generator_UserColumnName="prueba2" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="prueba1" msprop:Generator_ColumnVarNameInTable="columnprueba1" msprop:Generator_ColumnPropNameInRow="prueba1" msprop:Generator_ColumnPropNameInTable="prueba1Column" msprop:Generator_UserColumnName="prueba1" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:prueba" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="prueba2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:prueba2" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__prueba2__prueba1__1273C1CD" msdata:parent="prueba" msdata:child="prueba2" msdata:parentkey="id" msdata:childkey="prueba1" msprop:Generator_UserChildTable="prueba2" msprop:Generator_ChildPropName="Getprueba2Rows" msprop:Generator_UserRelationName="FK__prueba2__prueba1__1273C1CD" msprop:Generator_ParentPropName="pruebaRow" msprop:Generator_RelationVarName="relationFK__prueba2__prueba1__1273C1CD" msprop:Generator_UserParentTable="prueba" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>